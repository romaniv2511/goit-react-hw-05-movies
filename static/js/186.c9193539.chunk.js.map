{"version":3,"file":"static/js/186.c9193539.chunk.js","mappings":"qNAgDA,UA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,QAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACRD,EAAe,YAEfE,EAAAA,EAAAA,IAAaR,GACVS,MAAK,SAAAN,GACCA,EAAQO,QAIbN,EAAWD,GACXG,EAAe,YAJbA,EAAe,QAKlB,IACAK,OAAM,SAAAC,GACLC,QAAQC,IAAIF,IACZG,EAAAA,EAAAA,IAAY,yBACb,GACJ,GAAE,CAACf,IAEgB,YAAhBK,GAAkC,SAAC,IAAD,IAElB,UAAhBA,GACK,qEAEW,YAAhBA,GAEA,wBACGF,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MAEb,uBAAIC,MAHGF,EADE,WAHnB,CAYD,C,kMC5CDG,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAW,mCAEJC,EAAkB,mCAAG,wGACTF,EAAAA,EAAAA,IAAA,wCAA2CC,IADlC,uBACxBE,EADwB,EACxBA,KACFC,EAAQD,EAAKE,QAAQT,KAAI,SAAAU,GAAI,MAAK,CACtCT,GAAIS,EAAKT,GACTU,MAAOD,EAAKC,MAFqB,IAFH,kBAOzBH,GAPyB,2CAAH,qDAUlBI,EAAgB,mCAAG,WAAMC,GAAN,2FACPT,EAAAA,EAAAA,IAAA,kCACMC,EADN,kBACwBQ,IAFjB,uBACtBN,EADsB,EACtBA,KAGFC,EAAQD,EAAKE,QAAQT,KAAI,SAAAU,GAAI,MAAK,CACtCT,GAAIS,EAAKT,GACTU,MAAOD,EAAKC,MAFqB,IAJL,kBASvBH,GATuB,2CAAH,sDAYhBM,EAAa,mCAAG,WAAM9B,GAAN,qGACJoB,EAAAA,EAAAA,IAAA,mBAAsBpB,EAAtB,oBAAyCqB,IADrC,uBACnBE,EADmB,EACnBA,KACAQ,EAAuDR,EAAvDQ,YAAaJ,EAA0CJ,EAA1CI,MAAOK,EAAmCT,EAAnCS,aAAcC,EAAqBV,EAArBU,SAAUC,EAAWX,EAAXW,OAC9CC,EAAe,CACnBR,MAAAA,EACAS,WAA2B,GAAfJ,GAAmBK,QAAQ,GACvCJ,SAAAA,EACAC,OAAQA,EAAOlB,KAAI,qBAAGa,IAAH,IAAoBS,KAAK,MAC5CC,UAAYR,EAAD,0CAE4BA,GADnC,8EATqB,kBAapBI,GAboB,2CAAH,sDAgBb3B,EAAY,mCAAG,WAAMR,GAAN,2FACHoB,EAAAA,EAAAA,IAAA,mBACTpB,EADS,4BACkBqB,IAFf,uBAClBE,EADkB,EAClBA,KAGFpB,EAAUoB,EAAKE,QAAQT,KAAI,kBAA8B,CAC7DC,GAD+B,EAAGA,GAElCC,OAF+B,EAAOA,OAGtCC,QAH+B,EAAeA,QAAf,IAJP,kBASnBhB,GATmB,2CAAH,sDAYZqC,EAAS,mCAAG,WAAMxC,GAAN,2FACAoB,EAAAA,EAAAA,IAAA,mBACTpB,EADS,4BACkBqB,IAFlB,uBACfE,EADe,EACfA,KAGFkB,EAAOlB,EAAKkB,KAAKzB,KAAI,gBAAGC,EAAH,EAAGA,GAAIY,EAAP,EAAOA,KAAMa,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,MAA4C,CACrE1B,GAAAA,EACAY,KAAAA,EACAa,UAAAA,EACAE,WAAaD,EAAD,0CAE2BA,GADnC,6EALqB,IAJJ,kBAYhBF,GAZgB,2CAAH,qD,sECrDhBI,EAAU,CACdC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAGIvC,EAAc,SAAAwC,GAAO,OAAIC,EAAAA,GAAAA,MAAYD,EAASV,EAAzB,C","sources":["components/Reviews/Reviews.jsx","services/API.jsx","services/notification.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/API';\nimport { noticeError } from 'services/notification';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [fetchStatus, setFetchStatus] = useState('idle');\n\n  useEffect(() => {\n    setFetchStatus('pending');\n\n    fetchReviews(movieId)\n      .then(reviews => {\n        if (!reviews.length) {\n          setFetchStatus('error');\n          return;\n        }\n        setReviews(reviews);\n        setFetchStatus('success');\n      })\n      .catch(error => {\n        console.log(error);\n        noticeError('Oops, something wrong!');\n      });\n  }, [movieId]);\n\n  if (fetchStatus === 'pending') return <Loader />;\n\n  if (fetchStatus === 'error')\n    return <p>We don't have any reviews for this movie.</p>;\n\n  if (fetchStatus === 'success')\n    return (\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst AUTH_KEY = '234e7b4c27db682739301b8b46dc0452';\n\nexport const fetchTrendingFilms = async () => {\n  const { data } = await axios.get(`/3/trending/movie/day?api_key=${AUTH_KEY}`);\n  const films = data.results.map(item => ({\n    id: item.id,\n    title: item.title,\n  }));\n\n  return films;\n};\n\nexport const fetchFilmsByName = async name => {\n  const { data } = await axios.get(\n    `/3/search/movie?api_key=${AUTH_KEY}&query=${name}`\n  );\n  const films = data.results.map(item => ({\n    id: item.id,\n    title: item.title,\n  }));\n\n  return films;\n};\n\nexport const fetchFilmById = async movieId => {\n  const { data } = await axios.get(`/3/movie/${movieId}?api_key=${AUTH_KEY}`);\n  const { poster_path, title, vote_average, overview, genres } = data;\n  const movieDetails = {\n    title,\n    userScore: (vote_average * 10).toFixed(2),\n    overview,\n    genres: genres.map(({ name }) => name).join(', '),\n    posterUrl: !poster_path\n      ? 'https://cdn.pixabay.com/photo/2016/03/31/17/54/cartoon-1293990_960_720.png'\n      : `https://image.tmdb.org/t/p/w500/${poster_path}`,\n  };\n\n  return movieDetails;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(\n    `/3/movie/${movieId}/reviews?api_key=${AUTH_KEY}`\n  );\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  return reviews;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `/3/movie/${movieId}/credits?api_key=${AUTH_KEY}`\n  );\n  const cast = data.cast.map(({ id, name, character, profile_path }) => ({\n    id,\n    name,\n    character,\n    profileUrl: !profile_path\n      ? 'https://cdn.pixabay.com/photo/2016/03/31/17/54/cartoon-1293990_960_720.png'\n      : `https://image.tmdb.org/t/p/w500/${profile_path}`,\n  }));\n  return cast;\n};\n","import { toast } from 'react-toastify';\n\nconst options = {\n  position: 'top-center',\n  autoClose: 7000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport const noticeError = message => toast.error(message, options);\nexport const noticeInfo = message => toast(message, options);\nexport const noticeSuccess = message => toast.success(message, options);\n"],"names":["movieId","useParams","useState","reviews","setReviews","fetchStatus","setFetchStatus","useEffect","fetchReviews","then","length","catch","error","console","log","noticeError","map","id","author","content","axios","AUTH_KEY","fetchTrendingFilms","data","films","results","item","title","fetchFilmsByName","name","fetchFilmById","poster_path","vote_average","overview","genres","movieDetails","userScore","toFixed","join","posterUrl","fetchCast","cast","character","profile_path","profileUrl","options","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","message","toast"],"sourceRoot":""}