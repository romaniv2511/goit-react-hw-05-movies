{"version":3,"file":"static/js/279.da8775fa.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAW,mCAEJC,EAAkB,mCAAG,8FAC1BF,EAAAA,EAAAA,IAAA,wCAA2CC,IADjB,mFAAH,qDAGlBE,EAAgB,mCAAG,WAAMC,GAAN,iFACxBJ,EAAAA,EAAAA,IAAA,kCAAqCC,EAArC,kBAAuDG,IAD/B,mFAAH,sDAGhBC,EAAa,mCAAG,WAAMC,GAAN,iFACrBN,EAAAA,EAAAA,IAAA,mBAAsBM,EAAtB,oBAAyCL,IADpB,mFAAH,sDAGbM,EAAY,mCAAG,WAAMD,GAAN,iFACpBN,EAAAA,EAAAA,IAAA,mBAAsBM,EAAtB,4BAAiDL,IAD7B,mFAAH,sDAGZO,EAAS,mCAAG,WAAMF,GAAN,iFACjBN,EAAAA,EAAAA,IAAA,mBAAsBM,EAAtB,4BAAiDL,IADhC,mFAAH,qD,+ICdTQ,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0QAaZE,EAAiBF,EAAAA,GAAAA,IAAH,4EAKdG,EAAeH,EAAAA,GAAAA,IAAH,4HAOZI,EAAgBJ,EAAAA,GAAAA,GAAH,oHAQbK,GAAgBL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,2Y,SCuC1B,EAhEqB,WAAO,IAAD,IACjBJ,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAAoCY,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOS,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,YACRxB,EAAAA,EAAAA,IAAcC,GAASwB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACrBC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,aAAcT,EAAqBM,EAArBN,SAAUE,EAAWI,EAAXJ,OAEpDP,EAAcY,GACdV,EAAYW,GACZT,GAA6B,GAAfU,GAAmBC,QAAQ,IACzCT,EAAYD,GACZG,EAAUD,EAAOS,KAAI,qBAAGhC,IAAH,IAAoBiC,KAAK,MAC/C,GACF,GAAE,CAAC/B,IAEJ,IAAMgC,EAAanB,EAAD,0CAEqBA,GADnC,6EAGEoB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,SAAC/B,EAAD,CAAcgC,GAAE,oBAAEF,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA1C,mCAGA,UAAC/B,EAAD,YACE,gBAAKgC,IAAI,SAASC,IAAKP,EAAWQ,OAAO,SACzC,4BACE,wBAAKzB,KAEL,0BACE,uCADF,IACsBE,EADtB,SAIA,sCACA,uBAAIE,KACJ,oCACA,uBAAIE,WAGR,UAACd,EAAD,YACE,oDACA,UAACC,EAAD,YACE,yBACE,SAACC,EAAD,CAAe0B,GAAG,OAAlB,qBAEF,yBACE,SAAC1B,EAAD,CAAe0B,GAAG,UAAlB,2BAGJ,SAAC,EAAAM,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C","sources":["components/service/API.jsx","pages/MovieDetails/MovieDetails.styles.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst AUTH_KEY = '234e7b4c27db682739301b8b46dc0452';\n\nexport const fetchTrendingFilms = async () =>\n  await axios.get(`/3/trending/movie/day?api_key=${AUTH_KEY}`);\n\nexport const fetchFilmsByName = async name =>\n  await axios.get(`/3/search/movie?api_key=${AUTH_KEY}&query=${name}`);\n\nexport const fetchFilmById = async movieId =>\n  await axios.get(`/3/movie/${movieId}?api_key=${AUTH_KEY}`);\n\nexport const fetchReviews = async movieId =>\n  await axios.get(`/3/movie/${movieId}/reviews?api_key=${AUTH_KEY}`);\n\nexport const fetchCast = async movieId =>\n  await axios.get(`/3/movie/${movieId}/credits?api_key=${AUTH_KEY}`);\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const GoBackButton = styled(Link)`\n  display: inline-block;\n  margin-left: 20px;\n  margin-bottom: 20px;\n  border: 2px solid rgb(85, 26, 139);\n  padding: 4px 16px;\n  border-radius: 4px;\n  color: rgb(85, 26, 139);\n  background-color: #ffffff;\n\n  text-decoration: none;\n`;\n\nexport const PrimaryInfoBox = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 0 20px;\n`;\nexport const ExtraInfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 20px;\n  padding: 0 20px;\n`;\nexport const ExtraInfoList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ExtraInfoLink = styled(NavLink)`\n  display: block;\n  padding: 4px 16px;\n  border-radius: 4px;\n  color: #ffffff;\n  background-color: rgb(85, 26, 139);\n  text-decoration: none;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgba(85, 26, 139, 0.7);\n  }\n  &.active {\n    border: 2px solid rgb(85, 26, 139);\n    color: rgb(85, 26, 139);\n    background-color: #ffffff;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchFilmById } from '../../components/service/API';\nimport {\n  GoBackButton,\n  PrimaryInfoBox,\n  ExtraInfoBox,\n  ExtraInfoList,\n  ExtraInfoLink,\n} from './MovieDetails.styles';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [posterPath, setPosterPath] = useState('');\n  const [filmName, setFilmName] = useState('');\n  const [userScore, setUserScore] = useState(0);\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState('');\n\n  useEffect(() => {\n    fetchFilmById(movieId).then(({ data }) => {\n      const { poster_path, title, vote_average, overview, genres } = data;\n\n      setPosterPath(poster_path);\n      setFilmName(title);\n      setUserScore((vote_average * 10).toFixed(2));\n      setOverview(overview);\n      setGenres(genres.map(({ name }) => name).join(', '));\n    });\n  }, [movieId]);\n\n  const posterUrl = !posterPath\n    ? 'https://cdn.pixabay.com/photo/2016/03/31/17/54/cartoon-1293990_960_720.png'\n    : `https://image.tmdb.org/t/p/w500/${posterPath}`;\n\n  const location = useLocation();\n\n  return (\n    <>\n      <GoBackButton to={location.state?.from ?? '/'}>\n        &#129104; Go back\n      </GoBackButton>\n      <PrimaryInfoBox>\n        <img alt=\"poster\" src={posterUrl} height=\"300\" />\n        <div>\n          <h1>{filmName}</h1>\n\n          <p>\n            <b>User score:</b> {userScore} %\n          </p>\n\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres}</p>\n        </div>\n      </PrimaryInfoBox>\n      <ExtraInfoBox>\n        <h3>Additional information</h3>\n        <ExtraInfoList>\n          <li>\n            <ExtraInfoLink to=\"cast\">Cast</ExtraInfoLink>\n          </li>\n          <li>\n            <ExtraInfoLink to=\"reviews\">Reviews</ExtraInfoLink>\n          </li>\n        </ExtraInfoList>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </ExtraInfoBox>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","AUTH_KEY","fetchTrendingFilms","fetchFilmsByName","name","fetchFilmById","movieId","fetchReviews","fetchCast","GoBackButton","styled","Link","PrimaryInfoBox","ExtraInfoBox","ExtraInfoList","ExtraInfoLink","NavLink","useParams","useState","posterPath","setPosterPath","filmName","setFilmName","userScore","setUserScore","overview","setOverview","genres","setGenres","useEffect","then","data","poster_path","title","vote_average","toFixed","map","join","posterUrl","location","useLocation","to","state","from","alt","src","height","Suspense","fallback"],"sourceRoot":""}