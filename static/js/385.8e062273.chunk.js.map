{"version":3,"file":"static/js/385.8e062273.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styles.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styles.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/API.jsx","services/notification.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FilmsList = styled.ul`\n  display: grid;\n  grid-gap: 4px;\n  margin-top: 20px;\n`;\n\nexport const FilmLink = styled(Link)`\n  color: #000;\n  font-weight: 500;\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: rgba(85, 26, 139, 0.7);\n  }\n  &:visited {\n    color: rgb(85, 26, 139);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { FilmsList, FilmLink } from './MoviesList.styles';\n\nexport const MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <FilmsList>\n      {films.map(({ id, title }) => (\n        <li key={id}>\n          <FilmLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </FilmLink>\n        </li>\n      ))}\n    </FilmsList>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  margin-left: 8px;\n  border: 1px solid rgb(85, 26, 139);\n  border-radius: 4px;\n  padding: 4px 8px;\n  width: 240px;\n`;\nexport const Button = styled.button`\n  margin-left: 4px;\n  padding: 4px 16px;\n  border: 0;\n  border-radius: 4px;\n  color: #ffffff;\n  background-color: rgb(85, 26, 139);\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgba(85, 26, 139, 0.7);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { Input, Button } from './SearchBar.styles';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const { register, handleSubmit } = useForm();\n  const onSearchSubmit = ({ value }) => onSubmit(value);\n  return (\n    <form onSubmit={handleSubmit(onSearchSubmit)}>\n      <Input type=\"text\" {...register('value')} />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchFilmsByName } from 'services/API';\n\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { noticeError } from 'services/notification';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const updateQuery = value => setSearchParams({ query: value.trim() });\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setFilms([]);\n    setIsLoading(true);\n\n    fetchFilmsByName(query)\n      .then(data => {\n        if (!data.length) {\n          noticeError(`${query} is not found!`);\n        }\n        setFilms(data);\n      })\n      .catch(error => {\n        console.log(error);\n        noticeError('Oops, something wrong!');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar onSubmit={updateQuery} />\n      {isLoading && <Loader />}\n      {films.length > 0 && <MoviesList films={films} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst AUTH_KEY = '234e7b4c27db682739301b8b46dc0452';\n\nexport const fetchTrendingFilms = async () => {\n  const { data } = await axios.get(`/3/trending/movie/day?api_key=${AUTH_KEY}`);\n  const films = data.results.map(item => ({\n    id: item.id,\n    title: item.title,\n  }));\n\n  return films;\n};\n\nexport const fetchFilmsByName = async name => {\n  const { data } = await axios.get(\n    `/3/search/movie?api_key=${AUTH_KEY}&query=${name}`\n  );\n  const films = data.results.map(item => ({\n    id: item.id,\n    title: item.title,\n  }));\n\n  return films;\n};\n\nexport const fetchFilmById = async movieId => {\n  const { data } = await axios.get(`/3/movie/${movieId}?api_key=${AUTH_KEY}`);\n  const { poster_path, title, vote_average, overview, genres } = data;\n  const movieDetails = {\n    title,\n    userScore: (vote_average * 10).toFixed(2),\n    overview,\n    genres: genres.map(({ name }) => name).join(', '),\n    posterUrl: !poster_path\n      ? 'https://cdn.pixabay.com/photo/2016/03/31/17/54/cartoon-1293990_960_720.png'\n      : `https://image.tmdb.org/t/p/w500/${poster_path}`,\n  };\n\n  return movieDetails;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(\n    `/3/movie/${movieId}/reviews?api_key=${AUTH_KEY}`\n  );\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  return reviews;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `/3/movie/${movieId}/credits?api_key=${AUTH_KEY}`\n  );\n  const cast = data.cast.map(({ id, name, character, profile_path }) => ({\n    id,\n    name,\n    character,\n    profileUrl: !profile_path\n      ? 'https://cdn.pixabay.com/photo/2016/03/31/17/54/cartoon-1293990_960_720.png'\n      : `https://image.tmdb.org/t/p/w500/${profile_path}`,\n  }));\n  return cast;\n};\n","import { toast } from 'react-toastify';\n\nconst options = {\n  position: 'top-center',\n  autoClose: 7000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n\nexport const noticeError = message => toast.error(message, options);\nexport const noticeInfo = message => toast(message, options);\nexport const noticeSuccess = message => toast.success(message, options);\n"],"names":["FilmsList","styled","FilmLink","Link","MoviesList","films","location","useLocation","map","id","title","to","state","from","Input","Button","SearchBar","onSubmit","useForm","register","handleSubmit","value","type","useState","setFilms","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchFilmsByName","then","data","length","noticeError","catch","error","console","log","finally","trim","Loader","axios","AUTH_KEY","fetchTrendingFilms","results","item","name","fetchFilmById","movieId","poster_path","vote_average","overview","genres","movieDetails","userScore","toFixed","join","posterUrl","fetchReviews","reviews","author","content","fetchCast","cast","character","profile_path","profileUrl","options","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","message","toast"],"sourceRoot":""}